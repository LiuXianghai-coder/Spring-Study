<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace 对应相关的 DAO 接口，Mybatis 会根据这个接口通过代理的方式生成对应的数据访问对象 -->
<mapper namespace="com.example.demo.mapper.RateInfoMapper">

    <!-- 使用 RedissonCache 替换现有的二级缓存实现 -->
    <cache type="org.redisson.mybatis.RedissonCache">
        <!-- 存活时间，即缓存对的有效时间 -->
        <property name="timeToLive" value="10000" />
        <!-- 最大空闲时间，超过这个时间没有被使用的缓存将会被清除 -->
        <property name="maxIdleTime" value="5000" />
        <!-- 缓存对的最大大小 -->
        <property name="maxSize" value="100000" />

        <!-- Redisson 配置文件 -->
        <property name="redissonConfig" value="redisson.yaml" />
    </cache>

    <insert id="insert" parameterType="com.example.demo.entity.RateInfo" >
        INSERT INTO rate_info(<include refid="allCols" />)
        VALUES (#{id}, #{rateName}, #{rateVal}, #{backUpId}, #{createdTime}, #{createdUser}, #{updatedUser}, #{updatedTime})
    </insert>

    <sql id="allCols">
        id, rate_name, rate_val, backup_id, created_time, created_user, updated_user, updated_time
    </sql>

    <select id="selectById" parameterType="long" resultType="com.example.demo.entity.RateInfo">
        SELECT <include refid="allCols" />
        FROM rate_info
        WHERE id=#{id}
    </select>

    <update id="update" parameterType="com.example.demo.entity.RateInfo">
        UPDATE rate_info SET rate_name=#{rateName}, rate_val=#{rateVal}, backup_id=#{backUpId},
                             updated_time=#{updatedTime}, updated_user=#{updatedUser}
        WHERE id=#{id}
    </update>

    <resultMap id="BaseResult" type="com.example.demo.entity.RateInfo">
        <id column="id" property="id"/>
        <result column="rate_name" property="rateName"/>
        <result column="rate_val" property="rateVal"/>
        <result column="created_time" property="createdTime"/>
        <result column="created_user" property="createdUser"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="updated_user" property="updatedUser"/>
    </resultMap>
</mapper>
